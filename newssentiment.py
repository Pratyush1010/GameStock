# -*- coding: utf-8 -*-
"""NewsSentiment.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vtZ6wqMbok4-yKBLYMvtepVJ-4ozsrRR
"""

import requests
import pandas as pd

def get_news_sentiment(company):
  """
  Returns news and sentiment data for a specific company.

  Args:
    company: The name of the company to get news and sentiment data for.

  Returns:
    A list of news articles, each of which is a dictionary with the following keys:
      * `title`: The title of the news article.
      * `url`: The URL of the news article.
      * `content`: The content of the news article.
      * `sentiment`: The sentiment of the news article.
  """

  url = 'https://www.alphavantage.co/query?function=NEWS_SENTIMENT&tickers={}&apikey=demo'.format(company)
  r = requests.get(url)
  data = r.json()
  df = pd.DataFrame(data)
  return df

get_news_sentiment('AAPL')

import requests

# Replace 'YOUR_API_KEY' with your actual API key
api_key = 'VHHZUBY5JU3VSJYZ'

# Define the parameters
function = 'NEWS_SENTIMENT'
tickers = 'IBM'
topics = 'technology,ipo'
time_from = '20220410T0130'
sort = 'RELEVANCE'
limit = 10

# Construct the API request URL
url = f'https://www.alphavantage.co/query?function={function}&tickers={tickers}&topics={topics}&time_from={time_from}&sort={sort}&limit={limit}&apikey={api_key}'

# Send the API request
r = requests.get(url)

# Parse the JSON response
data = r.json()

# Print the response data
print(data)

df = pd.DataFrame(data)
df.head(10)

# Explode the 'feed' column into individual rows

df = pd.json_normalize(df['feed'])

df.head()

df["overall_sentiment_score"].mean()

##FINAL FUNCTION


import requests
import pandas as pd

def get_mean_sentiment_score(api_key, tickers):
    # Define the constant parameters
    function = 'NEWS_SENTIMENT'
    topics = 'technology,ipo'
    time_from = '20220410T0130'
    sort = 'RELEVANCE'
    limit = 10

    # Construct the API request URL
    url = f'https://www.alphavantage.co/query?function={function}&tickers={tickers}&topics={topics}&time_from={time_from}&sort={sort}&limit={limit}&apikey={api_key}'

    # Send the API request
    r = requests.get(url)

    # Check if the request was successful
    if r.status_code == 200:
        # Parse the JSON response
        data = r.json()

        # Create a DataFrame
        df = pd.DataFrame(data)

        # Explode the 'feed' column into individual rows
        df = pd.json_normalize(df['feed'])

        # Calculate the mean sentiment score
        mean_sentiment_score = df["overall_sentiment_score"].mean()

        return mean_sentiment_score
    else:
        return None  # Return None in case of an error

# Replace 'YOUR_API_KEY' with your actual API key
api_key = 'VHHZUBY5JU3VSJYZ'

# Define the ticker
tickers = 'IBM'

# Call the function and get the mean sentiment score
mean_sentiment_score = get_mean_sentiment_score(api_key, tickers)

if mean_sentiment_score is not None:
    print(f"Mean Sentiment Score for {tickers}: {mean_sentiment_score}")
else:
    print("Error: Unable to retrieve data.")